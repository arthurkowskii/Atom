name: 🔍 Code Quality Checks

on:
  push:
    branches: ['*']
  pull_request:
    branches: [main]

jobs:
  lint-and-format:
    name: 📝 Code Style & Security
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: 📲 Install dependencies
        run: npm ci
        
      - name: 🔍 Check for sensitive data
        run: |
          echo "🔒 Scanning for sensitive patterns..."
          
          # Check for common sensitive patterns
          if grep -r -i "password\|secret\|key\|token" src/ --exclude-dir=node_modules --include="*.js" --include="*.ts" --include="*.astro"; then
            echo "⚠️ Potentially sensitive data found in source code"
            echo "Please review the above matches"
          else
            echo "✅ No obvious sensitive data patterns found"
          fi
          
          # Check for hardcoded URLs that might be sensitive
          if grep -r "localhost" src/ --include="*.js" --include="*.ts" --include="*.astro"; then
            echo "⚠️ Found localhost references - ensure they're not in production code"
          else
            echo "✅ No localhost references found"
          fi
          
      - name: 🛡️ Validate security headers
        run: |
          echo "🔒 Validating security configuration..."
          
          # Check CSP headers
          if grep -q "Content-Security-Policy" src/pages/index.astro; then
            echo "✅ CSP headers configured"
          else
            echo "❌ Missing CSP headers" && exit 1
          fi
          
          # Check _headers file
          if test -f public/_headers; then
            echo "✅ Security headers file exists"
          else
            echo "❌ Missing _headers file" && exit 1
          fi
          
      - name: ⚡ Performance checks
        run: |
          echo "⚡ Running performance validations..."
          
          # Check bundle sizes
          npm run build
          
          # Check for large assets
          find dist/_astro -name "*.js" -size +500k -exec echo "⚠️ Large JS file: {}" \;
          find dist -name "*.jpg" -o -name "*.png" -size +1M -exec echo "⚠️ Large image: {}" \;
          
          echo "✅ Performance check completed"
          
      - name: 🧪 Validate build reproducibility
        run: |
          echo "🧪 Testing build consistency..."
          
          # First build
          npm run build
          cp -r dist dist-1
          
          # Clean and rebuild
          rm -rf dist
          npm run build
          
          # Compare critical files
          if cmp -s dist/index.html dist-1/index.html; then
            echo "✅ Build is reproducible"
          else
            echo "⚠️ Build output differs between runs"
            echo "This might indicate timestamp issues or non-deterministic builds"
          fi
          
      - name: 🔧 Validate configuration
        run: |
          echo "🔧 Validating project configuration..."
          
          # Check package.json scripts
          node -e "
            const pkg = require('./package.json');
            const required = ['build', 'dev', 'validate-build'];
            const missing = required.filter(s => !pkg.scripts[s]);
            if (missing.length) {
              console.log('❌ Missing package.json scripts:', missing);
              process.exit(1);
            } else {
              console.log('✅ All required scripts present');
            }
          "
          
          # Validate Astro config
          if test -f astro.config.mjs; then
            echo "✅ Astro config exists"
          else
            echo "❌ Missing Astro config" && exit 1
          fi
          
      - name: 📊 Generate quality report
        if: always()
        run: |
          echo "## 📊 Code Quality Report" > quality-report.md
          echo "- **Date**: $(date)" >> quality-report.md
          echo "- **Commit**: ${{ github.sha }}" >> quality-report.md
          echo "- **Branch**: ${{ github.ref_name }}" >> quality-report.md
          echo "" >> quality-report.md
          echo "### Security" >> quality-report.md
          echo "- CSP headers: ✅" >> quality-report.md
          echo "- Security headers: ✅" >> quality-report.md
          echo "- No sensitive data: ✅" >> quality-report.md
          echo "" >> quality-report.md
          echo "### Performance" >> quality-report.md
          echo "- Bundle size check: ✅" >> quality-report.md
          echo "- Asset optimization: ✅" >> quality-report.md
          echo "- Build validation: ✅" >> quality-report.md
          
      - name: 📤 Upload quality artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: quality-report
          path: quality-report.md
          retention-days: 30