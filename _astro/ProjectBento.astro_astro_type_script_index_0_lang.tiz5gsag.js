import{T as s,o as n,P as c,r as l,a as r,G as i,b as w,d as p,M as q,e as u,f as M,O as R,A as E,h as P,W as O,S as V,g as j,c as z,s as B,n as N}from"./index.DPGl_ZwA.js";class g extends s{constructor(){const t=n(g.getDefaults(),arguments,["delayTime","maxDelay"]);super(t),this.name="Delay";const e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new c({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),l(this,"delayTime")}static getDefaults(){return Object.assign(s.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}class D extends r{constructor(){super(n(D.getDefaults(),arguments,["value"])),this.override=!1,this.name="Add",this._sum=new i({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,w(this._constantSource,this._sum)}static getDefaults(){return Object.assign(r.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class S extends p{constructor(){const t=n(S.getDefaults(),arguments,["min","max"]);super(t),this.name="Scale",this._mult=this.input=new q({context:this.context,value:t.max-t.min}),this._add=this.output=new D({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(p.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class T extends p{constructor(){super(n(T.getDefaults(),arguments)),this.name="Zero",this._gain=new i({context:this.context}),this.output=this._gain,this.input=void 0,u(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),M(this.context.getConstant(0),this._gain),this}}class f extends s{constructor(){const t=n(f.getDefaults(),arguments,["frequency","min","max"]);super(t),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=c.prototype._fromType,this._toType=c.prototype._toType,this._is=c.prototype._is,this._clampValue=c.prototype._clampValue,this._oscillator=new R(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new i({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new r({context:this.context,units:"audioRange",value:0}),this._zeros=new T({context:this.context}),this._a2g=new E({context:this.context}),this._scaler=this.output=new S({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),l(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(R.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,a=this.max;this._units=t,this.min=e,this.max=a}get state(){return this._oscillator.state}connect(t,e,a){return(t instanceof c||t instanceof r)&&(this.convert=t.convert,this.units=t.units),P(this,t,e,a),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}class G extends p{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new O({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class L extends s{constructor(){const t=n(L.getDefaults(),arguments,["fade"]);super(t),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new G({context:this.context}),this.a=new i({context:this.context,gain:0}),this.b=new i({context:this.context,gain:0}),this.output=new i({context:this.context}),this._internalChannels=[this.a,this.b],this.fade=new r({context:this.context,units:"normalRange",value:t.fade}),l(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",u(this._split,this.a.gain,0),u(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(s.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class _ extends s{constructor(){const t=n(_.getDefaults(),arguments,["channels"]);super(t),this.name="Split",this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(s.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class m extends s{constructor(){const t=n(m.getDefaults(),arguments,["channels"]);super(t),this.name="Merge",this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(s.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class C extends s{constructor(t){super(t),this.name="StereoEffect",this.input=new i({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new L({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new _({context:this.context,channels:2}),this._merge=new m({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),l(this,["wet"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),w(...t),u(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),w(...t),u(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(s.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class A extends C{constructor(t){super(t),this.feedback=new r({context:this.context,value:t.feedback,units:"normalRange"}),this._feedbackL=new i({context:this.context}),this._feedbackR=new i({context:this.context}),this._feedbackSplit=new _({context:this.context,channels:2}),this._feedbackMerge=new m({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),l(this,["feedback"])}static getDefaults(){return Object.assign(C.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class k extends A{constructor(){const t=n(k.getDefaults(),arguments,["frequency","delayTime","depth"]);super(t),this.name="Chorus",this._depth=t.depth,this._delayTime=t.delayTime/1e3,this._lfoL=new f({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new f({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._delayNodeL=new g({context:this.context}),this._delayNodeR=new g({context:this.context}),this.frequency=this._lfoL.frequency,l(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=t.type,this.spread=t.spread}static getDefaults(){return Object.assign(A.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(t){this._depth=t;const e=this._delayTime*t;this._lfoL.min=Math.max(this._delayTime-e,0),this._lfoL.max=this._delayTime+e,this._lfoR.min=Math.max(this._delayTime-e,0),this._lfoR.max=this._delayTime+e}get delayTime(){return this._delayTime*1e3}set delayTime(t){this._delayTime=t/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class I{constructor(){this.isInitialized=!1,this.synth=null,this.chorus=null,this.config=null,this.isPlaying=!1}async init(){if(!this.isInitialized)try{if(this.config={enabled:!0,staggerDelayMs:80,animationDurationMs:400,easing:"cubic-bezier(0.34, 1.56, 0.64, 1)",cardEnabled:{hero:!0,stats:!0,actions:!0,tech:!0,gallery:!0,process:!0,challenges:!0,results:!0},audio:{enabled:!0,volume:.4,syncWithAnimation:!0,pitches:{hero:"C3",stats:"E3",actions:"G3",tech:"C4",gallery:"E4",process:"G4",challenges:"B3",results:"D4"},synthesis:{attack:.01,decay:.3,sustain:0,release:.8,chorus:{frequency:4,depth:.3}}}},window.atomConfig?.bentoAnimations&&(this.config={...this.config,...window.atomConfig.bentoAnimations}),!this.config.audio?.enabled){this.isInitialized=!0;return}console.log("🎵 Bento Animation System initialized (audio deferred until user interaction)"),this.isInitialized=!0}catch(t){console.warn("Failed to initialize Bento system:",t)}}async initAudio(){if(!this.synth)try{console.log("🎵 Initializing audio after user interaction..."),this.chorus=new k(this.config.audio.synthesis.chorus.frequency,this.config.audio.synthesis.chorus.depth,.5).toDestination(),this.synth=new V({oscillator:{type:"sine"},envelope:{attack:this.config.audio.synthesis.attack,decay:this.config.audio.synthesis.decay,sustain:this.config.audio.synthesis.sustain,release:this.config.audio.synthesis.release}}).connect(this.chorus),this.synth.volume.value=j(this.config.audio.volume),console.log("🎵 Audio components created successfully")}catch(t){console.warn("Failed to initialize audio:",t)}}getCardType(t){return t.classList.contains("hero-card")?"hero":t.classList.contains("music-links-card")||t.classList.contains("stats-card")?"stats":t.classList.contains("actions-card")?"actions":t.classList.contains("tech-card")?"tech":t.classList.contains("gallery-card")?"gallery":t.classList.contains("process-card")?"process":t.classList.contains("challenges-card")?"challenges":t.classList.contains("results-card")?"results":"hero"}async ensureAudioReady(){this.isInitialized||await this.init(),!this.synth&&this.config.audio?.enabled&&await this.initAudio(),this.synth&&z.state!=="running"&&(console.log("🎵 Starting Tone.js context..."),await B())}animateCard(t,e,a){if(!this.config||!(this.config.cardEnabled?.[e]??!0))return;t.style.setProperty("--duration",`${this.config.animationDurationMs}ms`),t.style.setProperty("--easing",this.config.easing),t.classList.remove("animate-in");const x=a*this.config.staggerDelayMs;setTimeout(()=>{if(t.classList.add("animate-in"),this.config.audio?.enabled&&this.isInitialized&&this.synth){const d=this.config.audio.pitches?.[e]||"C4";console.log(`🎵 Playing ${d} for ${e} card ${a}`);try{const b=N()+.01;this.synth.triggerAttackRelease(d,"8n",b)}catch(b){console.warn(`Audio error for ${e}:`,b)}}},x)}async startAnimation(){if(console.log("🎵 startAnimation() called",{isPlaying:this.isPlaying}),this.isPlaying){console.log("🎵 Already playing, returning early");return}this.isPlaying=!0,this.config||await this.init(),this.config?.audio?.enabled&&await this.ensureAudioReady();const t=document.querySelector('#bento-content .bento-project[style*="display: block"]'),e=t?t.querySelectorAll(".bento-card"):[];console.log(`🎵 Starting bento animation for ${e.length} cards (audio: ${this.config.audio?.enabled})`),console.log("🎵 Visible project:",t?.dataset?.projectSlug||"none"),e.forEach((y,x)=>{const d=this.getCardType(y);this.animateCard(y,d,x)});const a=e.length*this.config.staggerDelayMs+this.config.animationDurationMs+200;setTimeout(()=>{this.isPlaying=!1},a)}reset(){console.log("🎵 reset() called"),document.querySelectorAll("#bento-content .bento-card").forEach(e=>{e.classList.remove("animate-in")}),this.isPlaying=!1}}let o=null;async function v(){if(console.log("🎵 animateBentoCards() called",{hasSystem:!!o,isPlaying:o?.isPlaying,stack:new Error().stack}),o||(o=new I),o.isPlaying){console.log("🎵 Animation already playing, skipping...");return}await o.startAnimation()}function F(){console.log("🎵 resetBentoCards() called globally"),o&&o.reset()}typeof window<"u"&&(window.animateBentoCards=v,window.resetBentoCards=F,document.addEventListener("DOMContentLoaded",()=>{const h=document.getElementById("bento-content");h&&h.style.display!=="none"&&setTimeout(v,100)}));
